Отчет о выполнении ДЗ . Занятие 02.
PG_SQL_и_реляционные_СУБД._Введение_в_PostgreSQL-2

1. сделать в первой сессии новую таблицу и наполнить ее данными
create table persons(id serial, first_name text, second_name text);
insert into persons(first_name, second_name) values('ivan', 'ivanov');
insert into persons(first_name, second_name) values('petr', 'petrov');
commit;
Результат: Выполнено
2.посмотреть текущий уровень изоляции: show transaction isolation level
Результат: 
postgres=*# postgres=*# SHOW TRANSACTION ISOLATION LEVEL;
 transaction_isolation
-----------------------
 read committed
(1 row)
3.начать новую транзакцию в обоих сессиях с дефолтным (не меняя) уровнем изоляции
Результат: Выполнено
4. в первой сессии добавить новую запись
insert into persons(first_name, second_name) values('sergey', 'sergeev');
Результат:Выполнено
5.сделать select * from persons во второй сессии
Результат:
 id | first_name | second_name
----+------------+-------------
  1 | ivan       | ivanov
  2 | petr       | petrov
(2 rows)
- видите ли вы новую запись и если да то почему?
Ответ: Новая запись отсутствует в выборке, поскольку для второй сессии задан уровень изоляции транзакций read committed и в первой сессии транзакция в которой была добавлена запись еще не завершена.
6.завершить первую транзакцию - commit;
Результат: Выполнено
7.сделать select * from persons во второй сессии
Результат:
id | first_name | second_name
----+------------+-------------
  1 | ivan       | ivanov
  2 | petr       | petrov
  3 | sergey     | sergeev
(3 rows)
- видите ли вы новую запись и если да то почему?
Ответ:
Новая запись появилась в выборке для второй сессии, после завершения транзакции в первой сессии, поскольку для второй сессии задан уровень изоляции транзакций read committed, который не защищает от аномалии ‘фантомное чтение’.
8. завершите транзакцию во второй сессии
Результат: Выполнено
9. начать новые но уже repeatable read транзакции - set transaction isolation level repeatable read;
Результат: Выполнено
$show transaction isolation level;
 transaction_isolation
-----------------------
 repeatable read
(1 row)
10.в первой сессии добавить новую запись
insert into persons(first_name, second_name) values('sveta', 'svetova');
Результат: Выполнено
11.сделать select * from persons во второй сессии
Результат:
id | first_name | second_name
----+------------+-------------
  1 | ivan       | ivanov
  2 | petr       | petrov
  3 | sergey     | sergeev
(3 rows)
- видите ли вы новую запись и если да то почему?
Ответ: Нет, новая запись не попала в выборку для второй сессииб поскольку, для второй сессии задан уровень изоляции ‘repeatable read’, гарантирующий неизменность получаемых данных в рамках текущей транзакции, вне зависимости от статуса завершения транзакций в параллельных сессиях.  
12.завершить первую транзакцию - commit;
Результат: Выполнено

13. сделать select * from persons во второй сессии
Результат:
id | first_name | second_name
----+------------+-------------
  1 | ivan       | ivanov
  2 | petr       | petrov
  3 | sergey     | sergeev
(3 rows)
- видите ли вы новую запись и если да то почему?
Ответ: Нет, новая запись не попала в выборку для второй сессии, поскольку, для второй сессии задан уровень изоляции ‘repeatable read’, гарантирующий неизменность получаемых данных в рамках текущей транзакции, вне зависимости от статуса завершения транзакций в параллельных сессиях.  

14. завершить вторую транзакцию
Результат: Выполнено;
15. сделать select * from persons во второй сессии
Результат:
id | first_name | second_name
----+------------+-------------
  1 | ivan       | ivanov
  2 | petr       | petrov
  3 | sergey     | sergeev
  4 | sveta      | svetova
(4 rows)
- видите ли вы новую запись и если да то почему?
Ответ: Да. После завершения текущей транзакции для второй сессии с уровнем изоляции repeatable read, доступно получение новых данных и изменений, выполненных в параллельных завершенных транзакциях. Этот механизм реализует защиту от аномалии  ‘неповтряющееся чтение’, и в случае PostgresSQL – от аномалии ‘фантомное чтение’.
16. остановите виртуальную машину но не удаляйте ее
Результат: Выполнено

